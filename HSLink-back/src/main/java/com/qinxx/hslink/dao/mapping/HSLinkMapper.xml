<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinxx.hslink.dao.HSLinkMapper">

    <!--登录验证-->
    <select id="login" resultType="map" parameterType="map">
        select * from hs_user where (real_name = #{username}  and pass_word = #{password} and user_type = #{role})
        or (mobile = #{username} and pass_word = #{password}  and user_type = #{role})
    </select>

    <!--注册-->
    <insert id="register" parameterType="map">
       INSERT INTO hs_user ( user_id, pass_word,real_name, mobile, user_type, creat_time, frozen_state, error_times)
        VALUES
        (
        uuid(),
        #{password},
        #{realname},
        #{mobile},
        #{type},
        now(),
        '00',
        '0'
        )
    </insert>

    <!--获取校园通知-->
    <select id="getSchoolNotice" parameterType="map" resultType="map">
        SELECT
        s.id,
        label,
        title,
        content,
        user_id,
        real_name,
        release_time
        FROM
        hs_notice s left join hs_user u on s.release_id = u.user_id
        where type = '校园通知'
	    <if test="id != null and id != ''">
            and s.id = #{id}
        </if>
        <if test="type != null and type != ''">
            and label = #{label}
        </if>
        ORDER BY release_time desc
    </select>

    <!--获取家长建议-->
    <select id="getParentAdvice" parameterType="map" resultType="map">
        SELECT
        p.id,
        label,
        title,
        content,
        user_id,
        real_name,
        release_time
        FROM
        hs_notice p left join hs_user u on p.release_id = u.user_id
        where type = '家长建议'
        <if test="id != null and id != ''">
            and p.id = #{id}
        </if>
        <if test="type != null and type != ''">
            and label = #{label}
        </if>
        ORDER BY release_time desc
    </select>

    <!--获取学生想法-->
    <select id="getStudentThinking" parameterType="map" resultType="map">
        SELECT
        s.id,
        label,
        title,
        content,
        user_id,
        real_name,
        release_time
        FROM
        hs_notice s left join hs_user u on s.release_id = u.user_id
        where type = '学生想法'
        <if test="id != null and id != ''">
            and s.id = #{id}
        </if>
        <if test="type != null and type != ''">
            and label = #{label}
        </if>
        ORDER BY release_time desc
    </select>

    <!--获取一条数据的具体内容-->
    <select id="getOneContent" resultType="map" parameterType="map">
        select
        id,
        release_id author_id,
        real_name author_name,
        create_time,
        label,
        title,
        content,
        integral,
        '' header_photo
        from hs_notice n left join hs_user u on n.release_id = u.user_id
        where id = #{id}
    </select>

    <!--获取一条数据的留言-->
    <select id="getOneLeaveMessage" parameterType="map" resultType="map">
        select id,
		messager_id,
		content,
		hs_leave_message.create_time,
		real_name,
		'' header_photot from hs_leave_message left join hs_user  on messager_id = user_id where notice_id = #{id} ORDER BY create_time desc
    </select>

    <!--获取某些条件的数据-->
    <select id="getListByAttribute" resultType="map" parameterType="map">
        SELECT
        s.id,
        label,
        title,
        content,
        user_id,
        real_name,
        release_time,
        u.real_name,
        u.integral,
        '' header_photo,
        type
        FROM
        hs_notice s left join hs_user u on s.release_id = u.user_id
        where 1 = 1
        <if test="releaseId != null and releaseId != ''">
            and release_id = #{releaseId}
        </if>
        <if test="release_time != null and release_time != ''">
            and release_time like CONCAT('%',#{release_time},'%')
        </if>
        <if test="type != null and type != ''">
            and type = #{type}
        </if>
        and (label like CONCAT('%',#{text},'%')
        or title like CONCAT('%',#{text},'%')
        or content like CONCAT('%',#{text},'%')
        or real_name like CONCAT('%',#{text},'%'))
        ORDER BY release_time desc
    </select>

    <!--新增留言-->
    <insert id="addMessage" parameterType="map">
       insert into hs_leave_message(id,notice_id,messager_id,content,create_time) VALUES (uuid(),#{noticeId},#{userId},#{content},#{createTime})
    </insert>

    <!--新增文章-->
    <insert id="addArticle" parameterType="map">
        insert into hs_notice (id,label,title,content,release_id,release_time,type)
        values
        (uuid(),#{label},#{title},#{content},#{release_id},#{release_time},#{type})
    </insert>

    <!--获取班级公告-->
    <select id="getClassBulletin" parameterType="map" resultType="map">
        SELECT
DISTINCT
id,
c.class_id,
c.class_name,
title,
content,
release_time
FROM
	hs_class_bulletin c
	left JOIN hs_user u ON c.class_name = u.class_name
WHERE
	c.class_name = ( SELECT class_name FROM hs_user WHERE user_id = #{id} )
    </select>

    <!--获取班级通知-->
    <select id="getClassNotice" parameterType="map" resultType="map">
        select * from hs_class_notice left join hs_user on release_id = user_id
        where hs_class_notice.class_name = (select class_name from hs_user
        where user_id = #{id})
        <if test="text != null and text != ''">
            and (label like CONCAT('%',#{text},'%')
            or title like CONCAT('%',#{text},'%')
            or content like CONCAT('%',#{text},'%')
            or real_name like CONCAT('%','五一','%'))
        </if>
        ORDER BY release_time desc
    </select>

    <!--获取班级成员-->
    <select id="getStudents" parameterType="map" resultType="map">
        select * from hs_user where class_name = (select class_name from hs_user where user_id = #{id})
    </select>

    <!--新增班级公告-->
    <insert id="addBulletin" parameterType="map">
        insert into hs_class_bulletin (id,class_id,class_name,title,content,release_time) VALUES (uuid(),#{classId},#{className},#{title},#{content},#{releaseTime})
    </insert>

    <!--修改班级公告-->
    <update id="updateBulletin" parameterType="map">
        update hs_class_bulletin set class_id = #{classId},class_name=#{className},title=#{title},content=#{content},release_time=#{releaseTime} where id = #{id}
    </update>

</mapper>